package com.imaginnovate.service;

import java.time.LocalDate;
import java.time.temporal.ChronoUnit;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.imaginnovate.dto.EmployeeDTO;
import com.imaginnovate.dto.TaxDetails;
import com.imaginnovate.entity.Employee;
import com.imaginnovate.repository.IEmployeeRepository;

@Service
public class IEmployeeServiceImpl implements IEmployeeService {

	@Autowired
	private IEmployeeRepository repo;

	@Override
	public String addEmployee(EmployeeDTO employeedto) {

		Employee employee = new Employee();

		BeanUtils.copyProperties(employeedto, employee);

		Employee saveEmployee = repo.save(employee);

		return String.format("Employed Saved With %d", saveEmployee.getEmployeeID());

	}

	

	@Override
	public TaxDetails calculateEmployeeTax(Integer employeeId) {
		
		TaxDetails details = new TaxDetails();
		
		
		Employee employee = repo.findById(employeeId).get();
		
		BeanUtils.copyProperties(employee, details);
		 
		Double yearlySalary=0.0; 
		
		Double taxAmount = 0.0;
		
		LocalDate date = employee.getDoj();
		
		long days = ChronoUnit.DAYS.between(date,LocalDate.of(date.plusYears(1).getYear(),4, 01));
		
		if(days > 366) {
			
			yearlySalary = employee.getSalary() * 12;
			
			details.setYearlySalary(yearlySalary);
			
		}else {
			
			yearlySalary = (double) (days%12) *employee.getSalary() + employee.getSalary()/(days/12);
			
			details.setYearlySalary(yearlySalary);
		}
		
		
		if(yearlySalary <= 250000) {
			
			details.setTaxAmount(taxAmount);
			
			details.setCessAmount(0.0);
			
		}else if(yearlySalary > 250000 && yearlySalary <=500000) {
			
			details.setTaxAmount(yearlySalary * 0.05);
			details.setCessAmount(0.0);
			
		}else if(yearlySalary > 500000 && yearlySalary <=1000000) {
			
			details.setTaxAmount(500000 * 0.05 + yearlySalary * 0.05);
			details.setCessAmount(0.0);
			
		}else {
			
			details.setTaxAmount(500000 * 0.05 + 1000000 * 0.1 + yearlySalary * 0.05);
			
			details.setCessAmount(yearlySalary * 0.02);
			
		}
		
		return null;
	}

}
